{"version":3,"file":"component---src-pages-index-js.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./node_modules/camelcase/index.js","webpack://gatsby-starter-blog/../src/image-utils.ts","webpack://gatsby-starter-blog/../src/components/hooks.ts","webpack://gatsby-starter-blog/../src/components/picture.tsx","webpack://gatsby-starter-blog/../src/components/placeholder.tsx","webpack://gatsby-starter-blog/../src/components/main-image.tsx","webpack://gatsby-starter-blog/../src/components/layout-wrapper.tsx","webpack://gatsby-starter-blog/../src/components/gatsby-image.server.tsx","webpack://gatsby-starter-blog/../src/components/static-image.server.tsx","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = Object.assign({\n\t\tpascalCase: false\n\t}, options);\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLowerCase()\n\t\t.replace(/[_.\\- ]+(\\w|$)/g, (_, p1) => p1.toUpperCase())\n\t\t.replace(/\\d+(\\w|$)/g, m => m.toUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","/* eslint-disable no-unused-expressions */\nimport { stripIndent } from \"common-tags\"\nimport camelCase from \"camelcase\"\nimport { IGatsbyImageData } from \".\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.substr(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(stripIndent`\n    The requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* eslint-disable no-unused-expressions */\nimport {\n  useState,\n  CSSProperties,\n  useEffect,\n  HTMLAttributes,\n  ImgHTMLAttributes,\n  ReactEventHandler,\n  SetStateAction,\n  Dispatch,\n  RefObject,\n} from \"react\"\nimport { Node } from \"gatsby\"\nimport { PlaceholderProps } from \"./placeholder\"\nimport { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport {\n  IGatsbyImageHelperArgs,\n  generateImageData,\n  Layout,\n  EVERY_BREAKPOINT,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\nconst imageCache = new Set<string>()\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport function storeImageloaded(cacheKey?: string): void {\n  if (cacheKey) {\n    imageCache.add(cacheKey)\n  }\n}\n\nexport function hasImageLoaded(cacheKey: string): boolean {\n  return imageCache.has(cacheKey)\n}\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type FileNode = Node & {\n  childImageSharp?: IGatsbyImageDataParent<Node>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nexport type ImageDataLike = FileNode | IGatsbyImageDataParent | IGatsbyImageData\nexport const getImage = (node: ImageDataLike): IGatsbyImageData | undefined => {\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport async function applyPolyfill(\n  ref: RefObject<HTMLImageElement>\n): Promise<void> {\n  if (!(`objectFitPolyfill` in window)) {\n    await import(\n      /* webpackChunkName: \"gatsby-plugin-image-objectfit-polyfill\" */ `objectFitPolyfill`\n    )\n  }\n  ;(window as any).objectFitPolyfill(ref.current)\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  toggleLoaded?: (loaded: boolean) => void,\n  cacheKey?: string,\n  ref?: RefObject<HTMLImageElement>,\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  const onLoad: ReactEventHandler<HTMLImageElement> = function (e) {\n    if (isLoaded) {\n      return\n    }\n\n    storeImageloaded(cacheKey)\n\n    const target = e.currentTarget\n    const img = new Image()\n    img.src = target.currentSrc\n\n    if (img.decode) {\n      // Decode the image through javascript to support our transition\n      img\n        .decode()\n        .catch(() => {\n          // ignore error, we just go forward\n        })\n        .then(() => {\n          toggleLoaded(true)\n        })\n    } else {\n      toggleLoaded(true)\n    }\n  }\n\n  // Polyfill \"object-fit\" if unsupported (mostly IE)\n  if (ref?.current && !(`objectFit` in document.documentElement.style)) {\n    ref.current.dataset.objectFit = style.objectFit ?? `cover`\n    ref.current.dataset.objectPosition = `${style.objectPosition ?? `50% 50%`}`\n    applyPolyfill(ref)\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n    onLoad,\n    ref,\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport function useImageLoaded(\n  cacheKey: string,\n  loading: \"lazy\" | \"eager\",\n  ref: any\n): {\n  isLoaded: boolean\n  isLoading: boolean\n  toggleLoaded: Dispatch<SetStateAction<boolean>>\n} {\n  const [isLoaded, toggleLoaded] = useState(false)\n  const [isLoading, toggleIsLoading] = useState(loading === `eager`)\n\n  const rAF =\n    typeof window !== `undefined` && `requestAnimationFrame` in window\n      ? requestAnimationFrame\n      : function (cb: TimerHandler): number {\n          return setTimeout(cb, 16)\n        }\n  const cRAF =\n    typeof window !== `undefined` && `cancelAnimationFrame` in window\n      ? cancelAnimationFrame\n      : clearTimeout\n\n  useEffect(() => {\n    let interval: number\n    // @see https://stackoverflow.com/questions/44074747/componentdidmount-called-before-ref-callback/50019873#50019873\n    function toggleIfRefExists(): void {\n      if (ref.current) {\n        if (loading === `eager` && ref.current.complete) {\n          storeImageloaded(cacheKey)\n          toggleLoaded(true)\n        } else {\n          toggleIsLoading(true)\n        }\n      } else {\n        interval = rAF(toggleIfRefExists)\n      }\n    }\n    toggleIfRefExists()\n\n    return (): void => {\n      cRAF(interval)\n    }\n  }, [])\n\n  return {\n    isLoading,\n    isLoaded,\n    toggleLoaded,\n  }\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","/* eslint-disable filenames/match-regex */\nimport React, {\n  FunctionComponent,\n  ImgHTMLAttributes,\n  forwardRef,\n  LegacyRef,\n} from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n  innerRef: LegacyRef<HTMLImageElement>\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  innerRef,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n      ref={innerRef}\n    />\n  )\n}\n\nexport const Picture = forwardRef<HTMLImageElement, PictureProps>(\n  function Picture(\n    { fallback, sources = [], shouldLoad = true, ...props },\n    ref\n  ) {\n    const sizes = props.sizes || fallback?.sizes\n    const fallbackImage = (\n      <Image\n        {...props}\n        {...fallback}\n        sizes={sizes}\n        shouldLoad={shouldLoad}\n        innerRef={ref}\n      />\n    )\n\n    if (!sources.length) {\n      return fallbackImage\n    }\n\n    return (\n      <picture>\n        {sources.map(({ media, srcSet, type }) => (\n          <source\n            key={`${media}-${type}-${srcSet}`}\n            type={type}\n            media={media}\n            srcSet={shouldLoad ? srcSet : undefined}\n            data-srcset={!shouldLoad ? srcSet : undefined}\n            sizes={sizes}\n          />\n        ))}\n        {fallbackImage}\n      </picture>\n    )\n  }\n)\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React, { forwardRef } from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage = forwardRef<HTMLImageElement, MainImageProps>(\n  function MainImage(props, ref) {\n    return (\n      <>\n        <Picture ref={ref} {...props} />\n        <noscript>\n          <Picture {...props} shouldLoad={true} />\n        </noscript>\n      </>\n    )\n  }\n)\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","// eslint-disable-next-line @typescript-eslint/triple-slash-reference\n/// <reference path=\"../global.d.ts\" />\n\nimport React, { Fragment, FunctionComponent } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer: string | null = null\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<ILayoutWrapperProps> =\n  function LayoutWrapper({ children, ...props }) {\n    return (\n      <Fragment>\n        <Sizer {...props} />\n        {children}\n\n        {\n          // eslint-disable-next-line no-undef\n          SERVER && <NativeScriptLoading />\n        }\n      </Fragment>\n    )\n  }\n","import React, {\n  ElementType,\n  FunctionComponent,\n  CSSProperties,\n  WeakValidationMap,\n} from \"react\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImageHydrator: FunctionComponent<{\n  as?: ElementType\n  style?: CSSProperties\n  className?: string\n}> = function GatsbyImageHydrator({ as: Type = `div`, children, ...props }) {\n  return <Type {...props}>{children}</Type>\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n    if (preactClass) {\n      className = preactClass\n    }\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return (\n      <GatsbyImageHydrator\n        {...wrapperProps}\n        as={as}\n        style={{\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        }}\n        className={`${wClass}${className ? ` ${className}` : ``}`}\n      >\n        <LayoutWrapper layout={layout} width={width} height={height}>\n          <Placeholder\n            {...getPlaceholderProps(\n              placeholder,\n              false,\n              layout,\n              width,\n              height,\n              placeholderBackgroundColor,\n              objectFit,\n              objectPosition\n            )}\n          />\n\n          <MainImage\n            data-gatsby-image-ssr=\"\"\n            className={imgClassName}\n            {...(props as Omit<MainImageProps, \"images\" | \"fallback\">)}\n            // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n            {...getMainProps(\n              loading === `eager`,\n              false,\n              cleanedImages,\n              loading,\n              undefined,\n              undefined,\n              undefined,\n              imgStyle\n            )}\n          />\n        </LayoutWrapper>\n      </GatsbyImageHydrator>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n        © {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport css from \"./index.css\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst LandingPage = ({ data, location }) => {\n  const siteTitle = ''\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <div>\n        <div className=\"hero\">\n          <div className=\"profile-pic\">\n            <StaticImage\n              className=\"bio-avatar\"\n              layout=\"fixed\"\n              formats={[\"AUTO\", \"WEBP\", \"AVIF\"]}\n              src=\"../images/headshot.png\"\n              width={200}\n              height={200}\n              quality={95}\n              alt=\"Profile picture\"\n            />\n          </div>\n          <div>\n            <h2> Hi 👋, I'm Dora Zhao. </h2>\n            <body>\n              I am a Master's student at Princeton University, studying\n              computer science. I am interested in machine learning fairness, AI ethics, and\n              human-computer interaction. Currently, I am working in the <a href=\"http://visualai.princeton.edu/\" target=\"_blank\">\n              Princeton Visual AI Lab</a>, advised by <a href=\"https://www.cs.princeton.edu/~olgarus/\" target=\"_blank\">Professor Olga Russakovsky</a>.\n              This past summer, I interned at Sony AI in the AI Ethics group.\n            </body>\n          </div>\n        </div>\n        <body>\n          I received my undergraduate degree from Princeton University, where I majored\n          in computer science with minors in Asian American Studies and statistics + machine learning.\n          Previously, I have worked in the Stigma and Social Perception Lab led by Professors <a href=\"https://psych.princeton.edu/person/nicole-shelton\" target=\"_blank\">J. Nicole Shelton</a> and <a href=\"https://psych.princeton.edu/person/stacey-sinclair\" target=\"_blank\">Stacey Sinclair</a>,\n          conducted <a href=\"https://ourpublicservice.org/our-work/time-for-a-change/\" target=\"_blank\">research</a> on the federal government,\n          and interned at a travel start-up.\n        </body>\n        <br/>\n        <div>\n          <a href=\"mailto:dorothyz@princeton.edu\">[email]</a>\n          &emsp; <a href=\"https://github.com/dorazhao99/\" target=\"_blank\">[github]</a>\n          &emsp; <a href=\"https://www.linkedin.com/in/dorothy-z/\" target=\"_blank\">[linkedin]</a>\n        </div>\n      </div>\n      <div>\n        <h3> news </h3>\n        <ul>\n          <li><strong>[05/22]</strong> Finished my Master's program at Princeton University!</li>\n          <li><strong>[05/22]</strong> Defended my thesis on teenage perceptions of privacy on visual social media platforms, advised by Professor André Monroy-Hernández.</li>\n          <li><strong>[08/21]</strong> Started my Master's program at Princeton University!</li>\n          <li><strong>[08/21]</strong> Finished my summer internship at Sony AI on the AI Ethics team, where I worked on generating synthetic data with GANs for reducing bias in object classification tasks.</li>\n          <li><strong>[07/21]</strong> One paper accepted to ICCV 2021: <a href=\"https://arxiv.org/abs/2106.08503\" target=\"_blank\"> Understanding and Evaluating Racial Biases in Image Captioning </a></li>\n        </ul>\n      </div>\n      <div>\n        <h3> research </h3>\n        <div>\n        <ul>\n          <li><a href=\"https://arxiv.org/abs/2206.09191\" target=\"_blank\">Gender Artifacts in Visual Datasets</a> <br/>\n            Nicole Meister*, <strong>Dora Zhao*</strong>, Angelina Wang, Vikram V. Ramaswamy, Ruth Fong, Olga Russakovsky <br/>\n            <strong><i>arXiv 2022</i></strong>\n          </li> \n          <li><a href=\"https://dl.acm.org/doi/abs/10.1145/3491101.3516382\" target=\"_blank\">Anti-Racist HCI: Notes on an Emerging Critical Technical Practice</a> <br/>\n            One of nineteen authors <br/>\n            <strong><i>alt.CHI 2022</i></strong>\n          </li>     \n          <li><a href=\"https://arxiv.org/abs/2004.07999\" target=\"_blank\">REVISE: A Tool for Measuring and Mitigating Bias in Visual Datasets</a> <br/>\n            Angelina Wang, Alexander Liu, Ryan Zhang, Anat Kleiman, Leslie Kim, <strong>Dora Zhao</strong>, Iroha Shirai, Arvind Narayanan, Olga Russakovsky <br/>\n            <strong><i>IJCV 2022</i></strong>\n          </li>\n          <li><a href=\"https://arxiv.org/abs/2106.08503\" target=\"_blank\">Understanding and Evaluating Racial Biases in Image Captioning</a> <br/>\n            <strong>Dora Zhao</strong>, Angelina Wang, Olga Russakovsky <br/>\n            <strong><i>ICCV 2021</i></strong>\n          </li>\n\n        </ul>\n        </div>\n      </div>\n      <div>\n        <h3> teaching </h3>\n        <div>\n          <ul>\n            <li> COS 333: Advanced Programming Techniques, Spring 2022 </li>\n            <li> COS 333: Advanced Programming Techniques, Fall 2021 </li>\n            <li> COS IW 07: Computer Vision for Social Good, Spring 2021 </li>\n            <li> COS IW 08: Fairness of Visual Recognition, Spring 2021 </li>\n          </ul>\n        </div>\n\n      </div>\n    </Layout>\n  )\n}\n\nexport default LandingPage\n"],"names":["DEFAULT_PIXEL_DENSITIES","DEFAULT_BREAKPOINTS","EVERY_BREAKPOINT","warn","message","console","sortNumeric","a","b","getSrcSet","images","map","image","src","width","join","formatFromFilename","filename","dot","lastIndexOf","ext","substr","length","setDefaultDimensions","args","layout","height","sourceMetadata","breakpoints","aspectRatio","formats","u","format","toLowerCase","camelCase","Math","round","getLowResolutionImageURL","generateImageSource","fit","options","_generateImageSource","generateImageData","pluginName","reporter","backgroundColor","placeholderURL","Error","Set","size","has","add","imageSizes","imgDimensions","erroneousUserDimensions","Object","entries","filter","_","dim","outputPixelDensities","densities","dedupeAndSortDensities","calculated","getDimensionsAndAspectRatio","originalWidth","fixedDimension","stripIndent","sizes","density","presentationWidth","presentationHeight","unscaledWidth","fixedImageSizes","responsiveImageSizes","calculateImageSizes","result","sources","getSizes","forEach","imageSrc","Boolean","unscaled","find","img","fallback","srcSet","push","type","imageProps","placeholder","values","Array","from","concat","sort","min","includes","dimensions","imageAspectRatio","widthOption","Number","MAX_SAFE_INTEGER","heightOption","max","gatsbyImageIsInstalled","GATSBY___IMAGE","getImage","node","_node$images","_node$images$fallback","isGatsbyImageData","gatsbyImageData","isGatsbyImageDataParent","childImageSharp","_node$childImageSharp","getSrc","_getImage","_getImage$images","_getImage$images$fall","_getImage2","_getImage2$images","_getImage2$images$fal","getImageData","baseUrl","urlBuilder","sourceWidth","sourceHeight","props","_breakpoints","withArtDirection","defaultImage","artDirected","output","media","process","env","NODE_ENV","source","Image","loading","alt","shouldLoad","innerRef","React","decoding","undefined","ref","Picture","forwardRef","r","o","fallbackImage","key","propTypes","PropTypes","string","isRequired","bool","displayName","exact","arrayOf","oneOfType","Placeholder","_Picture$propTypes","propName","componentName","MainImage","NativeScriptLoading","dangerouslySetInnerHTML","__html","Sizer","style","paddingTop","maxWidth","display","role","position","LayoutWrapper","children","Fragment","removeNewLines","str","replace","GatsbyImageHydrator","as","Type","GatsbyImage","className","preactClass","imgClassName","imgStyle","objectFit","objectPosition","placeholderBackgroundColor","wrapperStyle","overflow","verticalAlign","getWrapperProps","wStyle","wClass","wrapperProps","cleanedImages","isLoaded","top","left","bottom","right","opacity","transition","getPlaceholderProps","isLoading","toggleLoaded","cacheKey","transform","willChange","onLoad","e","target","currentTarget","currentSrc","decode","then","getMainProps","StaticImage","imageData","__imageData","__error","_getStaticImage","GatsbyImageServer","checkDimensionProps","number","validLayouts","Link","Layout","location","title","rootPath","__PATH_PREFIX__","isRootPath","pathname","header","Date","getFullYear","graphql","css","LandingPage","data","siteTitle"],"sourceRoot":""}