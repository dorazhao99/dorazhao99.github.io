{"version":3,"file":"component---src-pages-blog-js-fdbbf4d9a96c44199084.js","mappings":"+JAyDA,IA9CY,KAAO,IAAD,IAChB,MAAMA,GAAOC,EAAAA,EAAAA,gBAAe,cAiBtBC,EAA+B,QAAzB,EAAGF,EAAKG,KAAKC,oBAAY,aAAtB,EAAwBF,OACjCG,EAA+B,QAAzB,EAAGL,EAAKG,KAAKC,oBAAY,aAAtB,EAAwBC,OAEvC,OACE,uBAAKC,UAAU,OACb,gBAAC,EAAAC,EAAW,CACVD,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBAAiB,uZAEtBZ,aAAM,EAANA,EAAQa,OACP,yBAAG,cACU,8BAASb,EAAOa,MAAc,KAAEb,aAAM,EAANA,EAAQc,UAAW,KAAI,IAElE,qBAAGC,KAAI,yBAAyBZ,aAAM,EAANA,EAAQa,UAAO,KAAU,sCAKzD,C,oFCrBV,UAzBkB,IAAyB,IAAD,MAAvB,KAAElB,EAAI,SAAEmB,GAAU,EACnC,MAAMC,GAAkC,QAAtB,EAAApB,EAAKG,KAAKC,oBAAY,aAAtB,EAAwBiB,QAAK,QAG/C,OAAqB,IAFPrB,EAAKsB,kBAAkBC,MAE3BC,OAEN,gBAAC,IAAM,CAACL,SAAUA,EAAUE,MAAOD,GACjC,gBAAC,IAAG,CAACC,MAAM,cACX,gBAAC,IAAG,MACJ,yBAAG,8JAUP,gBAAC,IAAM,CAACF,SAAUA,EAAUE,MAAOD,GACjC,0BAAI,wBACG,C","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/pages/blog.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"AUTO\", \"WEBP\", \"AVIF\"]}\n        src=\"../images/profile-pic.png\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <p>\n          Written by <strong>{author.name}</strong> {author?.summary || null}\n          {` `}\n          <a href={`https://twitter.com/${social?.twitter || ``}`}>\n            You should follow them on Twitter\n          </a>\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"All posts\" />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <h1> Under construction </h1>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n// <Seo title=\"All posts\" />\n// <Bio />\n// <ol style={{ listStyle: `none` }}>\n//   {posts.map(post => {\n//     const title = post.frontmatter.title || post.fields.slug\n//\n//     return (\n//       <li key={post.fields.slug}>\n//         <article\n//           className=\"post-list-item\"\n//           itemScope\n//           itemType=\"http://schema.org/Article\"\n//         >\n//           <header>\n//             <h2>\n//               <Link to={post.fields.slug} itemProp=\"url\">\n//                 <span itemProp=\"headline\">{title}</span>\n//               </Link>\n//             </h2>\n//             <small>{post.frontmatter.date}</small>\n//           </header>\n//           <section>\n//             <p\n//               dangerouslySetInnerHTML={{\n//                 __html: post.frontmatter.description || post.excerpt,\n//               }}\n//               itemProp=\"description\"\n//             />\n//           </section>\n//         </article>\n//       </li>\n//     )\n//   })}\n// </ol>\n"],"names":["data","useStaticQuery","author","site","siteMetadata","social","className","S","layout","formats","src","width","height","quality","alt","name","summary","href","twitter","location","siteTitle","title","allMarkdownRemark","nodes","length"],"sourceRoot":""}